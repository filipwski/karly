services:
  karly.api:
    image: mcr.microsoft.com/dotnet/sdk:9.0.200
    tty: true
    entrypoint:
      /bin/bash -c "dotnet restore && dotnet watch run --no-launch-profile --project ./src/Karly.Api"
    working_dir: /karly-api
    volumes:
      - .:/karly-api
      - karly_api_bin_volume:/karly-api/src/Karly.Api/bin
      - karly_api_obj_volume:/karly-api/src/Karly.Api/obj
      - karly_application_bin_volume:/karly-api/src/Karly.Application/bin
      - karly_application_obj_volume:/karly-api/src/Karly.Application/obj
      - karly_contracts_bin_volume:/karly-api/src/Karly.Contracts/bin
      - karly_contracts_obj_volume:/karly-api/src/Karly.Contracts/obj
      - karly_workerservice_bin_volume:/karly-api/src/Karly.WorkerService/bin
      - karly_workerservice_obj_volume:/karly-api/src/Karly.WorkerService/obj
      - karly_api_tests_integration_bin_volume:/karly-api/tests/Karly.Api.Tests.Integration/bin
      - karly_api_tests_integration_obj_volume:/karly-api/tests/Karly.Api.Tests.Integration/obj
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_WATCH_RESTART_ON_CHANGES=true
      - ConnectionStrings__KarlyDbContext=Server=database; Database=karly; Username=postgres; Password=${DATABASE_PASSWORD}
      - OpenAiKey=${OPEN_AI_KEY}
      - RabbitMq__HostName=rabbitmq
      - RabbitMq__UserName=guest
      - RabbitMq__Password=guest
      - RabbitMq__CreateCarQueueName=car_create_queue
    ports:
      - "8080:8080"
    depends_on:
      karly.worker:
        condition: service_healthy
        
  karly.worker:
    image: mcr.microsoft.com/dotnet/sdk:9.0.200
    tty: true
    entrypoint:
      /bin/bash -c "dotnet restore && dotnet watch run --no-launch-profile --project ./src/Karly.WorkerService"
    working_dir: /karly-api
    volumes:
      - .:/karly-api
      - karly_api_bin_volume:/karly-api/src/Karly.Api/bin
      - karly_api_obj_volume:/karly-api/src/Karly.Api/obj
      - karly_application_bin_volume:/karly-api/src/Karly.Application/bin
      - karly_application_obj_volume:/karly-api/src/Karly.Application/obj
      - karly_contracts_bin_volume:/karly-api/src/Karly.Contracts/bin
      - karly_contracts_obj_volume:/karly-api/src/Karly.Contracts/obj
      - karly_workerservice_bin_volume:/karly-api/src/Karly.WorkerService/bin
      - karly_workerservice_obj_volume:/karly-api/src/Karly.WorkerService/obj
      - karly_api_tests_integration_bin_volume:/karly-api/tests/Karly.Api.Tests.Integration/bin
      - karly_api_tests_integration_obj_volume:/karly-api/tests/Karly.Api.Tests.Integration/obj
    environment:
      - DOTNET_ENVIRONMENT=Development
      - DOTNET_WATCH_RESTART_ON_CHANGES=true
      - ConnectionStrings__KarlyDbContext=Server=database; Database=karly; Username=postgres; Password=${DATABASE_PASSWORD}
      - OpenAiKey=${OPEN_AI_KEY}
      - RabbitMq__HostName=rabbitmq
      - RabbitMq__UserName=guest
      - RabbitMq__Password=guest
      - RabbitMq__CreateCarQueueName=car_create_queue
    depends_on:
      rabbitmq:
        condition: service_healthy
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "cat /proc/*/cmdline | tr '\\0' '\\n' | grep -q './src/Karly.WorkerService'"]
      interval: 10s
      timeout: 5s
      retries: 5

  database:
    image: postgres:17.1
    restart: always
    shm_size: 128mb
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    command: >
      bash -c "apt-get update &&
        apt-get install -y postgresql-17-pgvector &&
        docker-entrypoint.sh postgres"
    healthcheck:
         test: ["CMD", "pg_isready", "-U", "postgres"]
         interval: 10s
         timeout: 5s
         retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  karly_api_bin_volume:
  karly_api_obj_volume:
  karly_application_bin_volume:
  karly_application_obj_volume:
  karly_contracts_bin_volume:
  karly_contracts_obj_volume:
  karly_api_tests_integration_bin_volume:
  karly_api_tests_integration_obj_volume:
  karly_workerservice_bin_volume:
  karly_workerservice_obj_volume: